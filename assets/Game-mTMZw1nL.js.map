{"version":3,"file":"Game-mTMZw1nL.js","sources":["../../src/composables/Card.ts","../../src/composables/cards/ShieldCard.ts","../../src/composables/cards/IncreaseAttackCard.ts","../../src/composables/cards/AttackCard.ts","../../src/store/handManager.ts","../../src/composables/Character.ts","../../src/store/gameManager.ts","../../src/store/levelManager.ts","../../src/components/LevelOverDraw.vue","../../src/components/HandCards.vue","../../src/components/WeaponCard.vue","../../src/store/weaponManager.ts","../../src/utils/dom.ts","../../src/utils/array.ts","../../src/components/OrderCards.vue","../../src/components/WeaponCards.vue","../../src/store/turnManager.ts","../../src/pages/Game.vue"],"sourcesContent":["import type { AttackCard } from './cards/AttackCard'\nimport type { IncreaseAttackCard } from './cards/IncreaseAttackCard'\nimport type { ShieldCard } from './cards/ShieldCard'\n\nexport enum CardType {\n  Attack = 'Attack',\n  Defend = 'Defend',\n  Skill = 'Skill',\n}\n\nexport enum TargetType {\n  Self = 'Self',\n  Enemy = 'Enemy',\n}\nexport type AllCard = AttackCard | IncreaseAttackCard | ShieldCard\n\nexport class Card {\n  name: string\n  description: string\n  cost: number\n  type: CardType\n  targetType: TargetType\n  id: string\n  position: 'weapon' | 'hand'\n  status: 'ACTIVE' | 'INACTIVE' | 'DISABLED' // 卡牌状态，默认为 active\n\n  constructor(name: string, description: string, cost: number, type: CardType, targetType: TargetType) {\n    this.name = name\n    this.description = description\n    this.cost = cost\n    this.type = type\n    this.targetType = targetType\n    this.id = Math.random().toString(36).substr(2, 9) // 生成随机 id\n    this.position = 'hand' // 默认卡牌位置为手牌\n    this.status = 'INACTIVE' // 默认卡牌状态为 INACTIVE\n  }\n}\n","import type { Player } from '../Character'\n\nexport class ShieldCard extends Card {\n  shield: number\n  extraShield: number\n\n  constructor(name: string, description: string, cost: number, shield: number = 5) {\n    super(name, description, cost, CardType.Attack, TargetType.Enemy) // 调用父类的构造函数并传入攻击类型和目标类型\n    this.shield = shield\n    this.extraShield = 0\n  }\n\n  increase(amount: number): void {\n    this.extraShield += amount\n  }\n\n  reduce(amount: number): void {\n    this.extraShield -= amount\n  }\n\n  play(player: Player): void {\n    player.increaseShield(this.shield + this.extraShield)\n  }\n}\n","export class IncreaseAttackCard extends Card {\n  increaseAmount: number\n\n  constructor(name: string, description: string, cost: number, effect: string, increaseAmount: number) {\n    super(name, description, cost, effect) // 调用父类的构造函数并传入技能类型、目标类型，效果和冷却时间\n    this.increaseAmount = increaseAmount\n    this.targetType = TargetType.Self // 这张卡的目标类型是自己\n  }\n\n  getIncreaseAmount(): number {\n    return this.increaseAmount\n  }\n\n  setIncreaseAmount(increaseAmount: number): void {\n    this.increaseAmount = increaseAmount\n  }\n\n  play(target: AttackCard): void {\n    target.extraAttack += this.increaseAmount\n  }\n\n  // 给\n}\n","import type { Enemy } from '../Character'\n\nexport class AttackCard extends Card {\n  physicalAttack: number\n  extraAttack: number\n\n  constructor(name: string, description: string, cost: number, physicalAttack: number) {\n    super(name, description, cost, CardType.Attack, TargetType.Enemy) // 调用父类的构造函数并传入攻击类型和目标类型\n    this.physicalAttack = physicalAttack\n    this.extraAttack = 0\n  }\n\n  increaseAttack(amount: number): void {\n    this.extraAttack += amount\n  }\n\n  reduceAttack(amount: number): void {\n    this.extraAttack -= amount\n  }\n\n  play(enemy: Enemy): void {\n    enemy.takeDamage(this.physicalAttack + this.extraAttack)\n  }\n}\n","import { defineStore } from 'pinia'\nimport { ShieldCard } from '../composables/cards/ShieldCard'\nimport { IncreaseAttackCard } from '~/composables/cards/IncreaseAttackCard'\nimport type { AllCard, Card } from '~/composables/Card'\nimport { AttackCard } from '~/composables/cards/AttackCard'\n\nexport const useHandManager = defineStore('handManager', () => {\n  const attackCard = new AttackCard('Sword', 'sword attack', 1, 20)\n  const increaseAttackCard = new IncreaseAttackCard('IncreaseAttack', 'IncreaseAttac', 4, 'effect', 2)\n  const shieldCard = new ShieldCard('Shield', 'incrase Shield', 1, 5)\n\n  const allCards = reactive<AllCard[]>([attackCard, increaseAttackCard, shieldCard])\n\n  let deckCards = reactive<AllCard[]>([attackCard, increaseAttackCard, shieldCard])\n\n  const handCards = reactive<AllCard[]>([])\n  const getTestCards = () => ([increaseAttackCard, attackCard, attackCard, increaseAttackCard, shieldCard])\n\n  const shuffle = () => {\n    // 在这里可以实现洗牌逻辑\n    // 这里使用 Fisher-Yates 算法实现\n    for (let i = deckCards.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1))\n      const temp = deckCards[i]\n      deckCards[i] = deckCards[j]\n      deckCards[j] = temp\n    }\n  }\n\n  // 从allCards获得随机指定数量卡牌\n\n  const getLevelCards = (num: number = 1) => {\n    const cards: AllCard[] = []\n    for (let i = 0; i < num; i++) {\n      const index = Math.floor(Math.random() * allCards.length)\n      const card = allCards[index]\n      cards.push({ ...card })\n    }\n    return cards\n  }\n  const addCardToHand = (cardName: string) => {\n    if (cardName === 'IncreaseAttack')\n      handCards.push(new IncreaseAttackCard('IncreaseAttack', 'IncreaseAttac', 4, 'effect', 2))\n    else if (cardName === 'Shield')\n      handCards.push(new ShieldCard('Shield', 'incrase Shield', 1, 5))\n    else if (cardName === 'Sword')\n      handCards.push(new AttackCard('Sword', 'sword attack', 1, 20))\n    else\n      throw new Error('Card not found')\n  }\n\n  const draw = (num: number) => {\n    if (num > deckCards.length)\n      throw new Error('Not enough cards in the deck')\n    const drawnCards = deckCards.slice(0, num)\n    deckCards = deckCards.slice(num)\n    return drawnCards\n  }\n\n  const drawCardToHand = (num: number) => {\n    const drawnCards = draw(num)\n    drawnCards.forEach((card) => {\n      addCardToHand(card.name)\n    })\n  }\n\n  const addCardToHandById = (cardId: string) => {\n    const card = allCards.find(card => card.id === cardId)\n    if (!card)\n      throw new Error('Card not found')\n    addCardToHand(card.name)\n  }\n\n  const init = () => {\n    allCards.splice(0, allCards.length, ...getTestCards())\n    deckCards.splice(0, deckCards.length, ...getTestCards())\n    drawCardToHand(3)\n  }\n\n  return { draw, shuffle, drawCardToHand, init, allCards, deckCards, handCards, getLevelCards, addCardToHandById }\n})\n","type MsgType = 'Attack' | 'Heal' | 'Miss' | 'Info'\nclass Character {\n  name: string\n  health: number\n  msg: string\n  msgType: MsgType\n  shield: number\n\n  constructor(name: string, health: number, shield: number) {\n    this.name = name\n    this.health = health\n    this.msg = ''\n    this.msgType = 'Attack'\n    this.shield = shield\n  }\n\n  setMsg(msg: string, type: MsgType = 'Info') {\n    this.msg = msg\n    this.msgType = type\n    setTimeout(() => {\n      this.msg = ''\n    }, 500)\n  }\n\n  takeDamage(damage: number) {\n    let lastDamage = damage - this.shield\n\n    // if the shiled completely blocks the damage, do not reduce the health\n    if (lastDamage <= 0) {\n      this.shield -= damage\n      lastDamage = 0\n    }\n    else {\n      this.shield = 0\n    }\n\n    this.health -= lastDamage\n\n    if (this.health <= 0) {\n      this.health = 0\n      this.died()\n    }\n    else {\n      this.setMsg(`-${damage}`, 'Attack')\n    }\n  }\n\n  increaseShield(amount: number) {\n    this.setMsg(`+ ${amount} .`, 'Heal')\n    this.shield += amount\n  }\n\n  died() {\n    this.health = 0\n    this.setMsg(`${this.name} is dead!`)\n  }\n}\n\nexport class Player extends Character {\n  constructor(name: string, health: number, shield: number) {\n    super(name, health, shield)\n  }\n}\n\nexport class Enemy extends Character {\n  physicalAttack: number\n  constructor(name: string, health: number, physicalAttack: number, shield: number) {\n    super(name, health, shield)\n    this.physicalAttack = physicalAttack\n  }\n\n  died(): void {\n    super.died()\n    this.setMsg(`${this.name} is dead!`)\n  }\n}\n","import { defineStore } from 'pinia'\nimport { Enemy, Player } from '~/composables/Character'\n\nexport const useGameManager = defineStore('gameManager', () => {\n  type Scene = 'START_MENU' | 'GAME' | 'GAME_WIN' | 'GAME_LOSE'\n  const scene = ref<Scene>('START_MENU')\n\n  const player = ref<Player>(new Player('Summer', 100, 0))\n\n  const win = () => {\n    scene.value = 'GAME_WIN'\n  }\n\n  const init = () => {\n    scene.value = 'GAME'\n  }\n\n  const lose = () => {\n    scene.value = 'GAME_LOSE'\n  }\n\n  return { player, scene, win,init, lose }\n})\n","import { defineStore } from 'pinia'\nimport { useGameManager } from './gameManager'\nimport { Enemy } from '~/composables/Character'\n\nexport const useLevelManager = defineStore('levelManager', () => {\n  const level = ref(1)\n  const isShowLevelOverDraw = ref(false)\n  const gameManager = useGameManager()\n  const levelEnemies = reactive<Enemy[]>([\n    new Enemy('DoodGuy', 50, 6, 0),\n    new Enemy('NormalGuy', 30, 12, 16),\n    new Enemy('BadGuy', 80, 18, 0),\n  ])\n\n  const enemy = ref<Enemy>(levelEnemies[0])\n\n  const init = () => {\n    level.value = 1\n    enemy.value = levelEnemies[0]\n  }\n\n  const openLevelOverDraw = () => {\n    isShowLevelOverDraw.value = true\n  }\n\n  const nextLevel = () => {\n    if (level.value >= levelEnemies.length) {\n      gameManager.win()\n      return\n    }\n\n    openLevelOverDraw()\n  }\n\n  const closeLevelOverDraw = () => {\n    isShowLevelOverDraw.value = false\n\n    level.value += 1\n    enemy.value = levelEnemies[level.value - 1]\n  }\n\n  watch(() => enemy.value.health, (newHealth) => {\n    if (newHealth <= 0)\n      nextLevel()\n  })\n\n  return { enemy, level, init, nextLevel, openLevelOverDraw, closeLevelOverDraw, isShowLevelOverDraw }\n})\n","<script setup lang=\"ts\">\nimport type { AllCard } from '~/composables/Card'\nimport { useHandManager } from '~/store/handManager'\nimport { useLevelManager } from '~/store/levelManager'\n\nconst handManager = useHandManager()\nconst levelManager = useLevelManager()\n\nconst cards: AllCard[] = reactive([])\nonMounted(() => {\n  cards.push(...handManager.getLevelCards(3))\n})\n\nfunction selectCard(cardId: string) {\n  handManager.addCardToHandById(cardId)\n  levelManager.closeLevelOverDraw()\n}\n</script>\n\n<template>\n  <div class=\"card-selection\">\n    <div class=\"card-container border\">\n      <div v-for=\"(card, index) in cards\" :key=\"index\" class=\"card\" @click=\"selectCard(card.id)\">\n        <Card :card=\"card\" />\n        <div class=\"overlay\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.card-selection {\n  text-align: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 999;\n}\n\n.card-container {\n  background-color: rgba(0, 0, 0, 0.7);\n  width: 600px;\n  height: 300px;\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n  align-items: center;\n  margin-top: 20px;\n}\n\n.card {\n  margin: 10px;\n  background: #000;\n  position: relative;\n  width: 150px;\n  height: 200px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  margin-bottom: 10px;\n  cursor: pointer;\n}\n\n.card img {\n  width: 100%;\n  height: 100%;\n  border-radius: 8px;\n}\n\n.overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 8px;\n  transition: background-color 0.3s ease;\n  opacity: 0;\n}\n\n.overlay.selected {\n  opacity: 1;\n}\n</style>\n","<script setup lang=\"ts\">\nimport { useHandManager } from '../store/handManager'\nimport type { ShieldCard } from '~/composables/cards/ShieldCard'\nimport type { AttackCard } from '~/composables/cards/AttackCard'\nimport type { IncreaseAttackCard } from '~/composables/cards/IncreaseAttackCard'\n\nconst store = useHandManager()\n\nfunction dragstart(event: DragEvent, card: Card) {\n  if (event.dataTransfer)\n    event.dataTransfer.setData('text/plain', JSON.stringify({ card, from: 'HAND' }))\n}\n</script>\n\n<template>\n  <div\n    class=\"hand-cards-container m-auto h-300px w-300px flex flex-row gap-2 overflow-auto border border-dark-50 rounded bg-gray-500/5 p-4\"\n  >\n    <div\n      v-for=\"(card, index) in store.handCards\"\n      :key=\"card.id\"\n      :data-x=\"index\"\n      :draggable=\"true\"\n      class=\"h-30 cursor-move border border-dark-50 rounded bg-gray-500/5 p-3\"\n      @dragstart=\"(ev) => dragstart(ev, card)\"\n    >\n      <Card :card=\"card\" />\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.hand-cards-container {\n  max-height: 200px;\n  width: 700px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n</style>\n../store/weaponManager\n","<script setup lang=\"ts\">\nimport type { AllCard } from '~/composables/Card'\nimport type { ShieldCard } from '~/composables/cards/ShieldCard'\nimport type { AttackCard } from '~/composables/cards/AttackCard'\nimport type { IncreaseAttackCard } from '~/composables/cards/IncreaseAttackCard'\n\nconst props = defineProps({\n  card: null,\n  active: { type: Boolean }\n})\n\nconst classObject = computed(() => ({\n  active: props.active,\n}))\n\ninterface ActionMsg {\n  text: string\n  color: 'shield' | 'attack' | 'info'\n}\n\nconst actionMsg = computed<ActionMsg>((): ActionMsg => {\n  if ('physicalAttack' in props.card)\n    return { text: `^ATK${props.card.physicalAttack + props.card.extraAttack}`, color: 'attack' }\n  if ('shield' in props.card)\n    return { text: `^Shield${(props.card as ShieldCard).shield}`, color: 'shield' }\n  if ('increaseAmount' in props.card)\n    return { text: `IncreaseAttack:${(props.card as IncreaseAttackCard).increaseAmount}`, color: 'info' }\n\n  return { text: '', color: 'info' }\n},\n\n)\n</script>\n\n<template>\n  <div v-if=\"card\" :class=\"classObject\">\n    <div class=\"text\">\n      <p>Name: {{ card.name }}</p>\n\n      <template v-if=\"'physicalAttack' in card\">\n        <p>ATK:{{ (card as AttackCard).physicalAttack + (card as AttackCard).extraAttack }}</p>\n      </template>\n\n      <template v-if=\"'shield' in card\">\n        <p>Shield:{{ (card as ShieldCard).shield }}</p>\n      </template>\n\n      <template v-if=\"'increaseAmount' in card\">\n        <p>IncreaseAttack:{{ (card as IncreaseAttackCard).increaseAmount }}</p>\n      </template>\n    </div>\n\n    <template v-if=\"active\">\n      <div class=\"action-msg\">\n        <div v-motion-pop :class=\"[actionMsg.color]\">\n          {{ actionMsg.text }}\n        </div>\n      </div>\n    </template>\n  </div>\n</template>\n\n<style scoped>\n.active {\n  border: 2px solid gray;\n}\np {\n  font-size: 14px;\n  text-align: left;\n}\n\n.shield {\n  color: rgb(218, 250, 203);\n}\n.attack {\n  color: rgb(253, 209, 209);\n}\n.info {\n  color: wheat;\n}\n</style>\n","import { defineStore } from 'pinia'\nimport { useHandManager } from './handManager'\nimport type { AllCard, Card } from '~/composables/Card'\n\ninterface Cell {\n  x: number\n  y: number\n  card: AllCard | null\n}\n\ninterface WeaponGridConfig {\n  name: string\n  height: number\n  width: number\n}\nexport const useWeaponManagerStore = defineStore('weaponManager', () => {\n  const handManager = useHandManager()\n\n  // Order of cards in the weapon grid\n  const orderIds = reactive<string[]>([])\n\n  // Active card in the weapon grid\n  const activeCardId = ref('')\n\n  const setActiveCardId = (cardId: string) => {\n    activeCardId.value = cardId\n  }\n\n  // Weapon grid configuration\n  const weaponConfig = reactive<WeaponGridConfig>({\n    name: 'Nine',\n    height: 3,\n    width: 3,\n  })\n  const weaponGrid = reactive<Cell[][]>(generateWeaponGrid(weaponConfig.width, weaponConfig.height))\n\n  function generateWeaponGrid(width: number, height: number): Cell[][] {\n    const board: Cell[][] = []\n    for (let x = 0; x < width; x++) {\n      const row: Cell[] = []\n      for (let y = 0; y < height; y++) {\n        const block: Cell = {\n          x,\n          y,\n          card: null,\n        }\n        row.push(block)\n      }\n      board.push(row)\n    }\n    return board\n  }\n\n  function getCellByCardId(cardId: string): Cell | null {\n    for (const row of weaponGrid) {\n      for (const cell of row) {\n        if (cell && cell.card && cell.card.id === cardId)\n          return cell\n      }\n    }\n    return null\n  }\n\n  function getCardByCardId(cardId: string): AllCard | null {\n    const cell = getCellByCardId(cardId)\n    return cell ? cell.card : null\n  }\n  interface AddCardToWeaponParams {\n    fromCardId: string\n    toX: number\n    toY: number\n  }\n  const addWeaponCardToWeapon = ({ fromCardId, toX, toY }: AddCardToWeaponParams) => {\n    const fromCell = getCellByCardId(fromCardId)\n    const toCell: Cell = weaponGrid[toX][toY]\n\n    if (!toCell.card) {\n      toCell.card = fromCell.card\n      fromCell.card = null\n    }\n    else {\n      const tempCellCard = { ...toCell.card }\n      toCell.card = fromCell.card\n      fromCell.card = tempCellCard\n    }\n  }\n\n  const addHandCardToWeapon = ({ fromCardId, toX, toY }: AddCardToWeaponParams) => {\n    const card = handManager.handCards.find(c => c.id === fromCardId)\n    if (!card)\n      throw new Error('Card not found in hand cards')\n    handManager.handCards.splice(handManager.handCards.indexOf(card), 1)\n\n    if (weaponGrid[toX][toY].card === null) {\n      weaponGrid[toX][toY].card = card\n    }\n    else {\n      const tempCellCard = { ...weaponGrid[toX][toY].card }\n      weaponGrid[toX][toY].card = card\n      handManager.handCards.push(tempCellCard)\n    }\n  }\n\n  const weaponCardIds = computed(() => {\n    const ids = []\n    for (const row of weaponGrid) {\n      for (const cell of row) {\n        if (cell && cell.card)\n          ids.push(cell.card.id)\n      }\n    }\n    return ids\n  })\n\n  const getCardByOrderIndex = (index: number) => {\n    return getCardByCardId(orderIds[index])\n  }\n\n  // 传入一个card,根据其card在weaponGrid所在行,获取其右侧所有card\n  function getRightElements(cardId: string): card[] {\n    const cell = getCellByCardId(cardId)\n    const rightElements = []\n    for (let i = cell.x + 1; i < weaponConfig.width; i++) {\n      const rightCell = weaponGrid[i][cell.y]\n      if (rightCell.card)\n        rightElements.push(rightCell.card)\n    }\n    return rightElements\n  }\n\n  const getRightCards = (card: Card) => {\n    return getRightElements(card.id)\n  }\n\n  return { activeCardId, setActiveCardId, getCardByCardId, getRightCards, getCardByOrderIndex, orderIds, weaponCardIds, weaponGrid, addHandCardToWeapon, addWeaponCardToWeapon }\n})\n","export function getIndexInParent(parent: HTMLElement, element: HTMLElement) {\n  const children = parent.children\n  // 遍历子节点列表，找到匹配的元素并返回索引\n  for (let i = 0; i < children.length; i++) {\n\n    if (children[i] === element)\n      return i\n  }\n  // 如果未找到匹配的元素，返回 -1 或其他合适的值\n  return -1\n}\n","// 给予一个数组,以及两个索引,将两个索引的元素进行对调\n\nexport function swap(arr: any[], i: number, j: number): void {\n  const temp = arr[i]\n  arr[i] = arr[j]\n  arr[j] = temp\n}\n","<script setup lang=\"ts\">\nimport { useWeaponManagerStore } from '../store/weaponManager'\nimport { getIndexInParent } from '../utils/dom'\nimport { swap } from '~/utils/array'\n\nconst store = useWeaponManagerStore()\n\nconst orderIdsRef = ref(null)\n\nwatch(() => store.weaponCardIds, () => {\n  store.orderIds.splice(0, store.orderIds.length, ...store.weaponCardIds)\n})\n\nfunction onDragStart(event: DragEvent, index: number) {\n  if (event.dataTransfer)\n    event.dataTransfer.setData('text/plain', JSON.stringify({ fromIndex: index }))\n}\nfunction onDrop(event: DragEvent) {\n  if (!event || !event.dataTransfer || !event.dataTransfer.getData('text') || !orderIdsRef.value)\n    return\n\n  const target = event.target as HTMLElement\n  const { fromIndex } = JSON.parse(event.dataTransfer.getData('text'))\n  const toIndex = getIndexInParent(orderIdsRef.value, target)\n  // 交换数组元素\n  swap(store.orderIds, fromIndex, toIndex)\n  target.classList.remove('ghost')\n}\nfunction ondragover(event: DragEvent) {\n  // 基于目标增加class\n  const target = event.target as HTMLElement\n  target.classList.add('ghost')\n  event.preventDefault()\n}\n\nfunction dragleave(event: DragEvent) {\n  const target = event.target as HTMLElement\n  target.classList.remove('ghost')\n  event.preventDefault()\n}\n\nfunction dragenter(event: DragEvent, index: number) {\n  if (!event || !event.dataTransfer || !event.dataTransfer.getData('text') || !orderIdsRef.value)\n    return\n  const { fromIndex } = JSON.parse(event.dataTransfer.getData('text'))\n  event.dataTransfer.setData('text/plain', JSON.stringify({ fromIndex, toIndex: index }))\n}\n\n// 写个函数,用于数组拖拽排序\n</script>\n\n<template>\n  <div>\n    {{ store.orderIds }}\n    <div\n      ref=\"orderIdsRef\"\n      class=\"m-auto h-200px w-700px flex flex-row gap-2 overflow-auto border border-dark-50 rounded bg-gray-500/5 p-4\"\n    >\n      <div\n        v-for=\"(item, index) in store.orderIds\"\n        :key=\"item\"\n        class=\"relative z-10 h-30 w-30 cursor-move border border-dark-50 rounded bg-gray-500/5 p-3\"\n        :draggable=\"true\"\n        @dragstart=\"(ev) => onDragStart(ev, index)\"\n        @dragover=\"ondragover\"\n        @drop=\"onDrop\"\n        @dragleave=\"dragleave\"\n        @dragenter=\"(e) => dragenter(e, index)\"\n      >\n        <div :draggable=\"false\" class=\"pointer-events-none select-none\">\n          <span class=\"number-bg absolute left-0 top-0 z-0 h-30 w-30 text-center text-white opacity-10\" style=\"font-size: 90px;\">\n            {{ index + 1 }}\n          </span>\n          <p class=\"\">\n            {{ store.getCardByCardId(item).name }}\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.hand-cards-container {\n  max-height: 200px;\n  width: 700px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.ghost {\n  opacity: 0.5;\n}\n</style>\n../store/weaponManager\n","<script setup lang=\"ts\">\nimport { useWeaponManagerStore } from '../store/weaponManager'\n\nconst store = useWeaponManagerStore()\n\nfunction dragstart(event: DragEvent, card: Card) {\n  if (event.dataTransfer)\n    event.dataTransfer.setData('text/plain', JSON.stringify({ card, from: 'WEAPON' }))\n}\n\nconst weaponCardsRef = ref(null)\n\nfunction ondrop(event: DragEvent) {\n  if (!event || !event.dataTransfer || !event.dataTransfer.getData('text'))\n    return\n\n  const targetElement = event.target as HTMLElement\n\n  const { card, from } = JSON.parse(event.dataTransfer.getData('text'))\n\n  targetElement.classList.remove('ghost')\n\n  const toX = targetElement.getAttribute('data-x')\n\n  const toY = targetElement.getAttribute('data-y')\n\n  if (toX === null || toY === null)\n    return\n\n  const param = { fromCardId: card.id, toX: Number.parseInt(toX), toY: Number.parseInt(toY) }\n\n  if (from === 'WEAPON')\n    store.addWeaponCardToWeapon(param)\n  if (from === 'HAND')\n    store.addHandCardToWeapon(param)\n}\n\nfunction ondragover(event: DragEvent) {\n  // 基于目标增加class\n  const target = event.target as HTMLElement\n  target.classList.add('ghost')\n  event.preventDefault()\n}\nfunction dragleave(event: DragEvent) {\n  const target = event.target as HTMLElement\n  target.classList.remove('ghost')\n  event.preventDefault()\n}\n\nconst showType = ref<'WEAPON' | 'ORDER'>('WEAPON')\n</script>\n\n<template>\n  <div>\n    <div class=\"h-10 w-40 flex items-center justify-center\">\n      <button class=\"border\" @click=\"showType = 'ORDER'\">\n        ORDER\n      </button>\n      <button class=\"border\" @click=\"showType = 'WEAPON'\">\n        WEAPON\n      </button>\n    </div>\n    <OrderCards v-show=\"showType === 'ORDER'\" class=\"order-cards\" />\n    <div\n      v-show=\"showType === 'WEAPON'\"\n      ref=\"weaponCardsRef\"\n      class=\"weapon-cards m-auto h-400px w-600px flex flex-row gap-2 overflow-auto border border-dark-50 rounded bg-gray-500/5 p-4\"\n    >\n      <div v-for=\"(row, rowIndex) in store.weaponGrid\" :key=\"rowIndex\" class=\"row\">\n        <div v-for=\"({ card, x, y }, colIndex) in row\" :key=\"colIndex\" class=\"col\">\n          <!-- empty -->\n          <template v-if=\"!card\">\n            <div\n              :data-x=\"x\"\n              :data-y=\"y\"\n              class=\"empty h-30 cursor-move overflow-hidden border border border-dark-50 rounded bg-gray-500/5 p-3\"\n              @dragover=\"ondragover\"\n              @drop=\"ondrop\"\n              @dragleave=\"dragleave\"\n            />\n          </template>\n          <!-- empty -->\n\n          <!-- card -->\n          <template v-else>\n            <div\n              :draggable=\"true\"\n              :data-x=\"x\"\n              :data-y=\"y\"\n              class=\"h-30 cursor-move overflow-hidden border border border-dark-50 rounded bg-gray-500/5 p-3\"\n              @dragstart=\"(ev) => dragstart(ev, card)\"\n              @dragover=\"ondragover\"\n              @drop=\"ondrop\"\n              @dragleave=\"dragleave\"\n            >\n              <div class=\"pointer-events-none\">\n                <WeaponCard :card=\"card\" :active=\"store.activeCardId === card.id\" />\n              </div>\n            </div>\n          </template>\n\n          <!-- card -->\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.ghost {\n  opacity: 0.5;\n}\n.weapon-cards {\n  display: grid;\n  /* 每行3个 */\n  grid-template-columns: repeat(3, 1fr);\n  overflow: hidden;\n  grid-gap: 10px;\n}\n.list-group-item {\n  cursor: move;\n}\n</style>\n../store/weaponManager\n","import { defineStore } from 'pinia'\nimport { useWeaponManagerStore } from './weaponManager'\nimport { useGameManager } from './gameManager'\nimport { useLevelManager } from '~/store/levelManager'\n\nexport const useTurnManagerStore = defineStore('turnManager', () => {\n  enum TurnPhase {\n    READY = 'READY',\n    PLAYER = 'PLAYER',\n    OPPONENT = 'OPPONENT',\n    ENDED = 'ENDED',\n  }\n\n  const turnPhase = ref(TurnPhase.PLAYER)\n\n  const { counter: weaponCardCounter, reset, pause, resume: startWeaponCardCounter } = useInterval(700, { controls: true, immediate: false })\n\n  const game = useGameManager()\n  const levelManager = useLevelManager()\n\n  const cardStore = useWeaponManagerStore()\n\n  // 初始每个回合,而不是初始关卡:translates to: at the beginning of each turn, not the beginning of the level\n  function init(): void {\n    reset()\n    turnPhase.value = TurnPhase.READY\n  }\n\n  function startTurn(): void {\n    startWeaponCardCounter()\n    turnPhase.value = TurnPhase.PLAYER\n  }\n\n  // 玩家回合:迭代weaponCards\n  watch(() => weaponCardCounter.value, () => {\n    if (weaponCardCounter.value <= 0)\n      return\n\n    const weaponCard = cardStore.getCardByOrderIndex(weaponCardCounter.value - 1)\n    if (!weaponCard)\n      return\n\n    cardStore.setActiveCardId(weaponCard.id)\n\n    if ('physicalAttack' in weaponCard) {\n      let damage = 0\n      if (weaponCard.physicalAttack)\n        damage = weaponCard.physicalAttack + weaponCard.extraAttack\n      else\n        damage = 0\n      levelManager.enemy.takeDamage(damage)\n    }\n\n    if ('shield' in weaponCard)\n      game.player.increaseShield(weaponCard.shield)\n\n    if ('increaseAmount' in weaponCard) {\n      const rightCards = cardStore.getRightCards(weaponCard)\n      rightCards.forEach((targetCard) => {\n        weaponCard.play(targetCard)\n      })\n    }\n\n    if (!cardStore.getCardByOrderIndex(weaponCardCounter.value)) {\n      setTimeout(() => {\n        endTurn()\n      }, 1000)\n    }\n  })\n\n  function endTurn() {\n    pause()\n    reset()\n    game.player.takeDamage(levelManager.enemy.physicalAttack)\n    cardStore.setActiveCardId('')\n  }\n\n  return { startTurn, init }\n})\n","<script setup lang=\"ts\">\nimport { useGameManager } from '../store/gameManager'\nimport { useTurnManagerStore } from '~/store/turnManager'\nimport { useLevelManager } from '~/store/levelManager'\nimport { useHandManager } from '~/store/handManager'\n\nconst game = useGameManager()\nconst turnManager = useTurnManagerStore()\nconst levelManager = useLevelManager()\nconst handManager = useHandManager()\nonBeforeMount(() => {\n  reset()\n})\n\nfunction reset() {\n  levelManager.init()\n  handManager.init()\n  turnManager.init()\n  game.init()\n}\n</script>\n\n<template>\n  <div class=\"game-container\">\n    <div class=\"test flex flex-col items-center justify-center\">\n      <button class=\"border-button border\" @click=\"turnManager.startTurn()\">\n        StartTurn\n      </button>\n    </div>\n\n    <div class=\"player\">\n      <div class=\"msg h-10 w-40\">\n        <Transition>\n          <p v-if=\"game.player.msg\" :class=\"game.player.msgType === 'Heal' ? 'text-green-100' : 'text-red-100'\">\n            {{ game.player.msg }}\n          </p>\n        </Transition>\n      </div>\n\n      <h2>{{ game.player.name }}</h2>\n\n      <p>Health: {{ game. player.health }}</p>\n      <p>Shield: {{ game. player.shield }}</p>\n    </div>\n    <div class=\"enemy\">\n      <div class=\"msg h-10 w-40 text-red-100\">\n        <Transition>\n          <p v-if=\"levelManager.enemy.msg\">\n            {{ levelManager.enemy.msg }}\n          </p>\n        </Transition>\n      </div>\n\n      <h2>{{ levelManager.enemy.name }}</h2>\n      <p>Health: {{ levelManager.enemy.health }}</p>\n\n      <p>Atk: {{ levelManager.enemy.physicalAttack }}</p>\n    </div>\n    <WeaponCards class=\"weapon-cards\" />\n    <HandCards class=\"hand-cards\" />\n\n    <div v-if=\"game.scene === 'GAME_WIN'\" class=\"text-1xl fixed bottom-0 left-0 right-0 top-0 z-50 h-full w-full flex flex-col items-center justify-center text-green-100\">\n      <div class=\"text-2xl\">\n        You Win!\n      </div>\n      <button class=\"border-button text-1xl mt-10 border\" @click=\"reset()\">\n        Play Again\n      </button>\n    </div>\n\n    <LevelOverDraw v-if=\"levelManager.isShowLevelOverDraw\" />\n  </div>\n</template>\n\n<style scoped>\n.ghost {\n  opacity: 0.5;\n}\n.game-container {\n  display: grid;\n  grid-template-areas:\n    'player weapon-cards enemy'\n    'player hand-cards enemy'\n    'test test test';\n\n  gap: 30px;\n}\n.player {\n  grid-area: player;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid black;\n  border-radius: 5px;\n  padding: 10px;\n}\n.enemy {\n  grid-area: enemy;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid black;\n  border-radius: 5px;\n  padding: 10px;\n}\n.weapon-cards {\n  grid-area: weapon-cards;\n  min-height: 500px;\n}\n.hand-cards {\n  grid-area: hand-cards;\n}\n.test {\n  grid-area: test;\n}\n.v-enter-active,\n.v-leave-active {\n  transition: opacity 0.2s ease;\n}\n\n.v-enter-from,\n.v-leave-to {\n  opacity: 0;\n}\n</style>\n../store/gameManager\n"],"names":["CardType","TargetType","Card","name","description","cost","type","targetType","ShieldCard","shield","amount","player","IncreaseAttackCard","effect","increaseAmount","target","AttackCard","physicalAttack","enemy","useHandManager","defineStore","attackCard","increaseAttackCard","shieldCard","allCards","reactive","deckCards","handCards","getTestCards","shuffle","i","j","temp","getLevelCards","num","cards","index","card","addCardToHand","cardName","draw","drawnCards","drawCardToHand","cardId","Character","health","msg","damage","lastDamage","Player","Enemy","useGameManager","scene","ref","useLevelManager","level","isShowLevelOverDraw","gameManager","levelEnemies","init","openLevelOverDraw","nextLevel","closeLevelOverDraw","watch","newHealth","handManager","levelManager","onMounted","selectCard","store","dragstart","event","props","__props","classObject","computed","actionMsg","useWeaponManagerStore","orderIds","activeCardId","setActiveCardId","weaponConfig","weaponGrid","generateWeaponGrid","width","height","board","row","y","block","getCellByCardId","cell","getCardByCardId","addWeaponCardToWeapon","fromCardId","toX","toY","fromCell","toCell","tempCellCard","addHandCardToWeapon","c","weaponCardIds","ids","getCardByOrderIndex","getRightElements","rightElements","rightCell","getIndexInParent","parent","element","children","swap","arr","orderIdsRef","onDragStart","onDrop","fromIndex","toIndex","ondragover","dragleave","dragenter","weaponCardsRef","ondrop","targetElement","from","param","showType","useTurnManagerStore","TurnPhase","turnPhase","weaponCardCounter","reset","pause","startWeaponCardCounter","useInterval","game","cardStore","startTurn","weaponCard","targetCard","endTurn","turnManager","onBeforeMount"],"mappings":"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"}